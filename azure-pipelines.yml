trigger:
    - master

strategy:
    matrix:
        linux:
            imageName: 'ubuntu-latest'
        windows:
            imageName: 'windows-latest'

pool:
    vmImage: $(imageName)

variables:
    buildConfiguration: 'Release'

steps:
    - task: UseDotNet@2
      displayName: 'Install .Net SDK'
      inputs:
        packageType: 'sdk'
        version: '6.x'
        includePreviewVersions: false
        installationPath: $(Agent.ToolsDirectory)/dotnet_latest

    - script: sudo apt update -q -y && sudo apt install -q -y iptables ipset sysstat firewalld
      displayName: 'Install dependencies on Linux'
      condition: contains( variables['Agent.OS'], 'Linux' )

    - task: NuGetToolInstaller@1
    - task: DotNetCoreCLI@2
      inputs:
        command: restore
        projects: './IPBanTests/IPBanTests.csproj'

    - script: $(Agent.ToolsDirectory)/dotnet_latest/dotnet build --configuration $(buildConfiguration) ./IPBanTests/IPBanTests.csproj
      displayName: 'Build All'

    - script: sudo $(Agent.ToolsDirectory)/dotnet_latest/dotnet test --configuration $(buildConfiguration) ./IPBanTests/IPBanTests.csproj
      displayName: 'Test Linux'
      condition: contains( variables['Agent.OS'], 'Linux' )

    - script: $(Agent.ToolsDirectory)/dotnet_latest/dotnet test --configuration $(buildConfiguration) ./IPBanTests/IPBanTests.csproj
      displayName: 'Test Windows'
      condition: contains( variables['Agent.OS'], 'Windows' )
