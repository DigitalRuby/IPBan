//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DigitalRuby.IPBanCore {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class IPBanResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal IPBanResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DigitalRuby.IPBanCore.IPBanResources", typeof(IPBanResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access Duration.
        /// </summary>
        public static string AccessDuration {
            get {
                return ResourceManager.GetString("AccessDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        public static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator.
        /// </summary>
        public static string Administrator {
            get {
                return ResourceManager.GetString("Administrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Common Failed User Name Ban.
        /// </summary>
        public static string AggregateBanUserNames {
            get {
                return ResourceManager.GetString("AggregateBanUserNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Threshold,hours to examine common user names and ban attackers that meet a threshold within hours timespan. Set to empty to disable this feature..
        /// </summary>
        public static string AggregateBanUserNamesTooltip {
            get {
                return ResourceManager.GetString("AggregateBanUserNamesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias.
        /// </summary>
        public static string Alias {
            get {
                return ResourceManager.GetString("Alias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed.
        /// </summary>
        public static string Allowed {
            get {
                return ResourceManager.GetString("Allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed Ports.
        /// </summary>
        public static string AllowedPorts {
            get {
                return ResourceManager.GetString("AllowedPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed port/port-ranges (comma separated). Empty to not allow any ports. Example: 80, 443, 500-510. Only supported on WinDivert and WFP firewalls..
        /// </summary>
        public static string AllowedPortsTooltip {
            get {
                return ResourceManager.GetString("AllowedPortsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Ports.
        /// </summary>
        public static string AllowPorts {
            get {
                return ResourceManager.GetString("AllowPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comma separated ports or port ranges to always allow, regardless of country blocking - i.e. 80, 443..
        /// </summary>
        public static string AllowPortsTooltip {
            get {
                return ResourceManager.GetString("AllowPortsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply.
        /// </summary>
        public static string Apply {
            get {
                return ResourceManager.GetString("Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ASN Blocklist.
        /// </summary>
        public static string AsnBlacklist {
            get {
                return ResourceManager.GetString("AsnBlacklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ASN to block (autonymous system number).
        /// </summary>
        public static string AsnBlacklistTooltip {
            get {
                return ResourceManager.GetString("AsnBlacklistTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start typing and select ASN that appear from the dropdown, can use id or name.
        /// </summary>
        public static string AsnBlockHelpLabel {
            get {
                return ResourceManager.GetString("AsnBlockHelpLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} entries in the ASN block list.
        /// </summary>
        public static string AsnBlockRangeEntryCount {
            get {
                return ResourceManager.GetString("AsnBlockRangeEntryCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Refresh.
        /// </summary>
        public static string AutoRefresh {
            get {
                return ResourceManager.GetString("AutoRefresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Update.
        /// </summary>
        public static string AutoUpdate {
            get {
                return ResourceManager.GetString("AutoUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Whitelist Success Logins.
        /// </summary>
        public static string AutoWhitelistSuccessLogins {
            get {
                return ResourceManager.GetString("AutoWhitelistSuccessLogins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of days to whitelist remote ip addresses that have a successful login.
        /// </summary>
        public static string AutoWhitelistSuccessLoginsTooltip {
            get {
                return ResourceManager.GetString("AutoWhitelistSuccessLoginsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available.
        /// </summary>
        public static string Available {
            get {
                return ResourceManager.GetString("Available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ban Count.
        /// </summary>
        public static string BanCount {
            get {
                return ResourceManager.GetString("BanCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Banned ip addresses.
        /// </summary>
        public static string BannedIPAddresses {
            get {
                return ResourceManager.GetString("BannedIPAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ban Time.
        /// </summary>
        public static string BanTime {
            get {
                return ResourceManager.GetString("BanTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The duration of time to ban an ip address. Format is DD:HH:MM:SS. Use 00:00:00:00 for max ban duration (90 days). Must be at least one minute..
        /// </summary>
        public static string BanTimeTooltip {
            get {
                return ResourceManager.GetString("BanTimeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base Url.
        /// </summary>
        public static string BaseUrl {
            get {
                return ResourceManager.GetString("BaseUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base url of the server to connect clients to, should be this server.
        /// </summary>
        public static string BaseUrlTooltip {
            get {
                return ResourceManager.GetString("BaseUrlTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blacklister.
        /// </summary>
        public static string Blacklister {
            get {
                return ResourceManager.GetString("Blacklister", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocked and Allowed Packets by Country last 24 hours.
        /// </summary>
        public static string BlockedPacketsByCountry {
            get {
                return ResourceManager.GetString("BlockedPacketsByCountry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Credentials.
        /// </summary>
        public static string ChangeCredentials {
            get {
                return ResourceManager.GetString("ChangeCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to City.
        /// </summary>
        public static string City {
            get {
                return ResourceManager.GetString("City", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear.
        /// </summary>
        public static string Clear {
            get {
                return ResourceManager.GetString("Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Bans on Restart.
        /// </summary>
        public static string ClearBannedIPAddressesOnRestart {
            get {
                return ResourceManager.GetString("ClearBannedIPAddressesOnRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to True to clear and unban all the ip addresses from the firewall upon restart, false otherwise.
        /// </summary>
        public static string ClearBannedIPAddressesOnRestartTooltip {
            get {
                return ResourceManager.GetString("ClearBannedIPAddressesOnRestartTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Failures on Login Success.
        /// </summary>
        public static string ClearFailedLoginsOnSuccessfulLogin {
            get {
                return ResourceManager.GetString("ClearFailedLoginsOnSuccessfulLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When an ip address receives a successful login, whether to clear all the failed logins for that ip from memory.
        /// </summary>
        public static string ClearFailedLoginsOnSuccessfulLoginTooltip {
            get {
                return ResourceManager.GetString("ClearFailedLoginsOnSuccessfulLoginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Configuration.
        /// </summary>
        public static string ClientConfiguration {
            get {
                return ResourceManager.GetString("ClientConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace global configuration values for this client.
        /// </summary>
        public static string ClientConfigurationOverrideTooltip {
            get {
                return ResourceManager.GetString("ClientConfigurationOverrideTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cloudflare api token to add firewall rules.
        /// </summary>
        public static string Cloudflare_ApiToken_Description {
            get {
                return ResourceManager.GetString("Cloudflare_ApiToken_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max count of ips to put in Cloudflare firewall, 10000 max.
        /// </summary>
        public static string Cloudflare_MaxCount_Description {
            get {
                return ResourceManager.GetString("Cloudflare_MaxCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comma separated zone ids to add firewall rules to.
        /// </summary>
        public static string Cloudflare_ZoneIds_Description {
            get {
                return ResourceManager.GetString("Cloudflare_ZoneIds_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm Delete.
        /// </summary>
        public static string ConfirmDelete {
            get {
                return ResourceManager.GetString("ConfirmDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected Clients.
        /// </summary>
        public static string ConnectedClients {
            get {
                return ResourceManager.GetString("ConnectedClients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country.
        /// </summary>
        public static string Country {
            get {
                return ResourceManager.GetString("Country", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country Blocklist.
        /// </summary>
        public static string CountryBlacklist {
            get {
                return ResourceManager.GetString("CountryBlacklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First Failed Login.
        /// </summary>
        public static string CountryBlacklistFirstFailedLogin {
            get {
                return ResourceManager.GetString("CountryBlacklistFirstFailedLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to wait until first failed login from a bad country before banning (checked) or to pro-actively add the entire country to the firewall if possible (unchecked). If checked, allowed ports is ignored. Accuracy is more precise when first failed login is checked..
        /// </summary>
        public static string CountryBlacklistFirstFailedLoginTooltip {
            get {
                return ResourceManager.GetString("CountryBlacklistFirstFailedLoginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country Blacklist Interval.
        /// </summary>
        public static string CountryBlacklistInterval {
            get {
                return ResourceManager.GetString("CountryBlacklistInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 24 hour start (local time), day of month to send out country blacklist to clients, i.e. 3,28.
        /// </summary>
        public static string CountryBlacklistIntervalTooltip {
            get {
                return ResourceManager.GetString("CountryBlacklistIntervalTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert Country Blocklist.
        /// </summary>
        public static string CountryBlacklistInvert {
            get {
                return ResourceManager.GetString("CountryBlacklistInvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to invert country block list (checked), so the countries specified are allow only and everything else is blocked. The default is to only block countries specified (unchecked)..
        /// </summary>
        public static string CountryBlacklistInvertTooltip {
            get {
                return ResourceManager.GetString("CountryBlacklistInvertTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override Country Blacklist.
        /// </summary>
        public static string CountryBlacklistOverride {
            get {
                return ResourceManager.GetString("CountryBlacklistOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country Blacklist Precise.
        /// </summary>
        public static string CountryBlacklistPrecise {
            get {
                return ResourceManager.GetString("CountryBlacklistPrecise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use precise country ip addresses (requires about 7x more RAM).
        /// </summary>
        public static string CountryBlacklistPreciseTooltip {
            get {
                return ResourceManager.GetString("CountryBlacklistPreciseTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select banned countries. The firewall will be updated with the first failed login from an ip address in the range of any blocked country, excluding any whitelisted ip addresses..
        /// </summary>
        public static string CountryBlacklistTooltip {
            get {
                return ResourceManager.GetString("CountryBlacklistTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start typing and pick countries from the dropdown that appears.
        /// </summary>
        public static string CountryBlockHelpLabel {
            get {
                return ResourceManager.GetString("CountryBlockHelpLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ranges in the country block list.
        /// </summary>
        public static string CountryListEntryCount {
            get {
                return ResourceManager.GetString("CountryListEntryCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Whitelist Firewall Rule.
        /// </summary>
        public static string CreateWhitelistFirewallRule {
            get {
                return ResourceManager.GetString("CreateWhitelistFirewallRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to create a whitelist firewall rule. This gives all whitelist ip access to all ports.
        /// </summary>
        public static string CreateWhitelistFirewallRuleTooltip {
            get {
                return ResourceManager.GetString("CreateWhitelistFirewallRuleTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any changes made to the administrator account will propagate to clients automatically..
        /// </summary>
        public static string CredentialPropagation {
            get {
                return ResourceManager.GetString("CredentialPropagation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cycle Time.
        /// </summary>
        public static string CycleTime {
            get {
                return ResourceManager.GetString("CycleTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The time between cycles to do house-keeping such as un-banning ip addresses, reloading config, etc. Will be clamped between 5 and 60 seconds. Format is DD:HH:MM:SS..
        /// </summary>
        public static string CycleTimeTooltip {
            get {
                return ResourceManager.GetString("CycleTimeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details.
        /// </summary>
        public static string Details {
            get {
                return ResourceManager.GetString("Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direction.
        /// </summary>
        public static string Direction {
            get {
                return ResourceManager.GetString("Direction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Notification Flags.
        /// </summary>
        public static string DisableNotificationFlags {
            get {
                return ResourceManager.GetString("DisableNotificationFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Docs.
        /// </summary>
        public static string Docs {
            get {
                return ResourceManager.GetString("Docs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        public static string Edit {
            get {
                return ResourceManager.GetString("Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Machine.
        /// </summary>
        public static string EditMachine {
            get {
                return ResourceManager.GetString("EditMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        public static string Enabled {
            get {
                return ResourceManager.GetString("Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable recent and naughty list.
        /// </summary>
        public static string EnableLists {
            get {
                return ResourceManager.GetString("EnableLists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to enable the recent and naughty list, global lists aggregated from all over the world from IPBan submissions.
        /// </summary>
        public static string EnableListsTooltip {
            get {
                return ResourceManager.GetString("EnableListsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable SSL.
        /// </summary>
        public static string EnableSSL {
            get {
                return ResourceManager.GetString("EnableSSL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to enable SSL (secure socket layer) immediately on connection. Leave false to auto-detect..
        /// </summary>
        public static string EnableSSLTooltip {
            get {
                return ResourceManager.GetString("EnableSSLTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter license keys, one per line.
        /// </summary>
        public static string EnterLicenseKeys {
            get {
                return ResourceManager.GetString("EnterLicenseKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expressions.
        /// </summary>
        public static string EventViewerExpressions {
            get {
                return ResourceManager.GetString("EventViewerExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event viewer expressions to find. Format is //XPath[newline]Regex. Regex can span multiple lines. Start a new XPath to search for by putting //XPath on a new line..
        /// </summary>
        public static string EventViewerExpressionsTooltip {
            get {
                return ResourceManager.GetString("EventViewerExpressionsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Viewer Failed Logins.
        /// </summary>
        public static string EventViewerFailedLogins {
            get {
                return ResourceManager.GetString("EventViewerFailedLogins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keywords.
        /// </summary>
        public static string EventViewerKeywords {
            get {
                return ResourceManager.GetString("EventViewerKeywords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event viewer keywords, in hex.
        /// </summary>
        public static string EventViewerKeywordsTooltip {
            get {
                return ResourceManager.GetString("EventViewerKeywordsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string EventViewerPath {
            get {
                return ResourceManager.GetString("EventViewerPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event viewer path, i.e. Application or Security, etc..
        /// </summary>
        public static string EventViewerPathTooltip {
            get {
                return ResourceManager.GetString("EventViewerPathTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Viewer Successful Logins.
        /// </summary>
        public static string EventViewerSuccessfulLogins {
            get {
                return ResourceManager.GetString("EventViewerSuccessfulLogins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Viewer (Windows).
        /// </summary>
        public static string EventViewerWindows {
            get {
                return ResourceManager.GetString("EventViewerWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expire Time.
        /// </summary>
        public static string ExpireTime {
            get {
                return ResourceManager.GetString("ExpireTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The duration after the last failed login attempt that the ip is forgotten(count reset back to 0). Set to 00:00:00:00 to use max duration (90 days). Format is DD:HH:MM:SS..
        /// </summary>
        public static string ExpireTimeTooltip {
            get {
                return ResourceManager.GetString("ExpireTimeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        public static string Export {
            get {
                return ResourceManager.GetString("Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed login attempts.
        /// </summary>
        public static string FailedLoginAttempts {
            get {
                return ResourceManager.GetString("FailedLoginAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed Logins Before Ban.
        /// </summary>
        public static string FailedLoginAttemptsBeforeBan {
            get {
                return ResourceManager.GetString("FailedLoginAttemptsBeforeBan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of failed logins before banning an ip address.
        /// </summary>
        public static string FailedLoginAttemptsBeforeBanTooltip {
            get {
                return ResourceManager.GetString("FailedLoginAttemptsBeforeBanTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed Log Level.
        /// </summary>
        public static string FailedLoginLogLevel {
            get {
                return ResourceManager.GetString("FailedLoginLogLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed Login Regex.
        /// </summary>
        public static string FailedLoginRegex {
            get {
                return ResourceManager.GetString("FailedLoginRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed Login Regex Timestamp Format.
        /// </summary>
        public static string FailedLoginRegexTimestampFormat {
            get {
                return ResourceManager.GetString("FailedLoginRegexTimestampFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format for timestamp if failed login regex has a timestamp group.
        /// </summary>
        public static string FailedLoginRegexTimestampFormatTooltip {
            get {
                return ResourceManager.GetString("FailedLoginRegexTimestampFormatTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regex to parse failed logins out of log files. Please provide ipaddress and username groups..
        /// </summary>
        public static string FailedLoginRegexTooltip {
            get {
                return ResourceManager.GetString("FailedLoginRegexTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed Logins Before Ban Whitelist.
        /// </summary>
        public static string FailedLoginsBeforeBanUserNameWhitelist {
            get {
                return ResourceManager.GetString("FailedLoginsBeforeBanUserNameWhitelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of failed logins before banning the ip address if the user name is in the user name whitelist.
        /// </summary>
        public static string FailedLoginsBeforeBanUserNameWhitelistTooltip {
            get {
                return ResourceManager.GetString("FailedLoginsBeforeBanUserNameWhitelistTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed Login Threshold.
        /// </summary>
        public static string FailedLoginThreshold {
            get {
                return ResourceManager.GetString("FailedLoginThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override the failed login threshold or 0 for default.
        /// </summary>
        public static string FailedLoginThresholdTooltip {
            get {
                return ResourceManager.GetString("FailedLoginThresholdTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter Settings.
        /// </summary>
        public static string FilterSettings {
            get {
                return ResourceManager.GetString("FilterSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firewall.
        /// </summary>
        public static string Firewall {
            get {
                return ResourceManager.GetString("Firewall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firewall Rule Prefix.
        /// </summary>
        public static string FirewallRulePrefix {
            get {
                return ResourceManager.GetString("FirewallRulePrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rule prefix name for firewall rules, must contain only A-Z, 0-9 and _.
        /// </summary>
        public static string FirewallRulePrefixTooltip {
            get {
                return ResourceManager.GetString("FirewallRulePrefixTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firewall Rules.
        /// </summary>
        public static string FirewallRules {
            get {
                return ResourceManager.GetString("FirewallRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extra firewall rules, one per line. Great way to persist firewall rules. Format is &apos;rule-name;allow or block;ip list (comma spearated);port list (comma separated);platform regex&apos;. The name should be kept to 16 or less chars.
        ///
        ///For allow rules, port list is allowed ports, so if you wanted to allow port 3389, just enter 3389.
        ///For block rules, port list is ignored ports, so if you wanted to block port 3389, you&apos;d enter 0-3388,3390-65535..
        /// </summary>
        public static string FirewallRulesTooltip {
            get {
                return ResourceManager.GetString("FirewallRulesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firewall Settings.
        /// </summary>
        public static string FirewallSettings {
            get {
                return ResourceManager.GetString("FirewallSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firewall Uri Rules.
        /// </summary>
        public static string FirewallUriRules {
            get {
                return ResourceManager.GetString("FirewallUriRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config entry for firewall uri rules, one per line. Format is RulePrefix,Interval(DD:HH:MM:SS),Uri[NEWLINE]..
        /// </summary>
        public static string FirewallUriRulesTooltip {
            get {
                return ResourceManager.GetString("FirewallUriRulesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FQDN.
        /// </summary>
        public static string FQDN {
            get {
                return ResourceManager.GetString("FQDN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General Settings.
        /// </summary>
        public static string GeneralSettings {
            get {
                return ResourceManager.GetString("GeneralSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Guest.
        /// </summary>
        public static string Guest {
            get {
                return ResourceManager.GetString("Guest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Home.
        /// </summary>
        public static string Home {
            get {
                return ResourceManager.GetString("Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Id.
        /// </summary>
        public static string Id {
            get {
                return ResourceManager.GetString("Id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string Import {
            get {
                return ResourceManager.GetString("Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address.
        /// </summary>
        public static string IPAddress {
            get {
                return ResourceManager.GetString("IPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPAddresses.
        /// </summary>
        public static string IPAddresses {
            get {
                return ResourceManager.GetString("IPAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address Events.
        /// </summary>
        public static string IPAddressEvents {
            get {
                return ResourceManager.GetString("IPAddressEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocked IP Addresses.
        /// </summary>
        public static string IPAddressNotificationFlags_BlockedIPAddress {
            get {
                return ResourceManager.GetString("IPAddressNotificationFlags_BlockedIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daily Report.
        /// </summary>
        public static string IPAddressNotificationFlags_DailyReport {
            get {
                return ResourceManager.GetString("IPAddressNotificationFlags_DailyReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed Logins.
        /// </summary>
        public static string IPAddressNotificationFlags_FailedLogin {
            get {
                return ResourceManager.GetString("IPAddressNotificationFlags_FailedLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monthly Report.
        /// </summary>
        public static string IPAddressNotificationFlags_MonthlyReport {
            get {
                return ResourceManager.GetString("IPAddressNotificationFlags_MonthlyReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successful Logins.
        /// </summary>
        public static string IPAddressNotificationFlags_SuccessfulLogin {
            get {
                return ResourceManager.GetString("IPAddressNotificationFlags_SuccessfulLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web Admin Successful Logins.
        /// </summary>
        public static string IPAddressNotificationFlags_SuccessfulWebAdminLogin {
            get {
                return ResourceManager.GetString("IPAddressNotificationFlags_SuccessfulWebAdminLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weekly Report.
        /// </summary>
        public static string IPAddressNotificationFlags_WeeklyReport {
            get {
                return ResourceManager.GetString("IPAddressNotificationFlags_WeeklyReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Who Is.
        /// </summary>
        public static string IPAddressNotificationFlags_WhoIs {
            get {
                return ResourceManager.GetString("IPAddressNotificationFlags_WhoIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 60E555E4ADFE4AAB9DAE61E0D57ADD7E.
        /// </summary>
        public static string IPBanKey1 {
            get {
                return ResourceManager.GetString("IPBanKey1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPBan Shield.
        /// </summary>
        public static string IPBanShield {
            get {
                return ResourceManager.GetString("IPBanShield", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Blacklist.
        /// </summary>
        public static string IPBlacklist {
            get {
                return ResourceManager.GetString("IPBlacklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Blacklist Regex.
        /// </summary>
        public static string IPBlacklistRegex {
            get {
                return ResourceManager.GetString("IPBlacklistRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regular expression for more advanced blacklisting. Shortcut: use* to allow any piece of an ip, dns name, url or user name(i.e. 128.128.128.*). Sample regex that blacklists a few ips: ^(128\.128\.128\.*)|(99\.99\.99\.[0-9])$ More info about regex: http://www.regular-expressions.info/.
        /// </summary>
        public static string IPBlacklistRegexTooltip {
            get {
                return ResourceManager.GetString("IPBlacklistRegexTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP addresses, cidr masks, dns names or user names to always ban and never unban. Prefix user names with user:, i.e. user:root. Separate multiple entries with comma..
        /// </summary>
        public static string IPBlacklistTooltip {
            get {
                return ResourceManager.GetString("IPBlacklistTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPThreat Api Key.
        /// </summary>
        public static string IPThreatApiKey {
            get {
                return ResourceManager.GetString("IPThreatApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Api key for https://ipthreat.net.
        /// </summary>
        public static string IPThreatApiKeyTooltip {
            get {
                return ResourceManager.GetString("IPThreatApiKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Whitelist.
        /// </summary>
        public static string IPWhitelist {
            get {
                return ResourceManager.GetString("IPWhitelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Whitelist Regex.
        /// </summary>
        public static string IPWhitelistRegex {
            get {
                return ResourceManager.GetString("IPWhitelistRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regular expression for more advanced whitelisting. Shortcut: use * to allow any piece of an ip (i.e. 128.128.128.*). Sample regex that whitelists a few ips: ^(128\.128\.128\.*)|(99\.99\.99\.[0-9])$ More info about regex: http://www.regular-expressions.info/.
        /// </summary>
        public static string IPWhitelistRegexTooltip {
            get {
                return ResourceManager.GetString("IPWhitelistRegexTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP addresses, cidr masks, urls or dns names to never ban. Prefix user names with user:, i.e. user:root. Separate multiple entries with comma..
        /// </summary>
        public static string IPWhitelistTooltip {
            get {
                return ResourceManager.GetString("IPWhitelistTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is IP Address Banned.
        /// </summary>
        public static string IsIPAddressBanned {
            get {
                return ResourceManager.GetString("IsIPAddressBanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ISP.
        /// </summary>
        public static string ISP {
            get {
                return ResourceManager.GetString("ISP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Items.
        /// </summary>
        public static string Items {
            get {
                return ResourceManager.GetString("Items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Update.
        /// </summary>
        public static string LastUpdate {
            get {
                return ResourceManager.GetString("LastUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leaks.
        /// </summary>
        public static string Leaks {
            get {
                return ResourceManager.GetString("Leaks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Licenses.
        /// </summary>
        public static string Licenses {
            get {
                return ResourceManager.GetString("Licenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local IP Address.
        /// </summary>
        public static string LocalIP {
            get {
                return ResourceManager.GetString("LocalIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Port.
        /// </summary>
        public static string LocalPort {
            get {
                return ResourceManager.GetString("LocalPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ping Interval.
        /// </summary>
        public static string LogFilePingInterval {
            get {
                return ResourceManager.GetString("LogFilePingInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How often to ping the log file, in milliseconds.
        /// </summary>
        public static string LogFilePingIntervalTooltip {
            get {
                return ResourceManager.GetString("LogFilePingIntervalTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login.
        /// </summary>
        public static string Login {
            get {
                return ResourceManager.GetString("Login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login failed.
        /// </summary>
        public static string LoginFailed {
            get {
                return ResourceManager.GetString("LoginFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log Level.
        /// </summary>
        public static string LogLevel {
            get {
                return ResourceManager.GetString("LogLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logout.
        /// </summary>
        public static string Logout {
            get {
                return ResourceManager.GetString("Logout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log Parsing.
        /// </summary>
        public static string LogParsing {
            get {
                return ResourceManager.GetString("LogParsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Machine.
        /// </summary>
        public static string Machine {
            get {
                return ResourceManager.GetString("Machine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Machine Access.
        /// </summary>
        public static string MachineAccess {
            get {
                return ResourceManager.GetString("MachineAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Machines.
        /// </summary>
        public static string Machines {
            get {
                return ResourceManager.GetString("Machines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Machine Whitelist.
        /// </summary>
        public static string MachineWhitelist {
            get {
                return ResourceManager.GetString("MachineWhitelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map.
        /// </summary>
        public static string Map {
            get {
                return ResourceManager.GetString("Map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blacklist Max Size.
        /// </summary>
        public static string MaxActiveBlacklistedIPAddresses {
            get {
                return ResourceManager.GetString("MaxActiveBlacklistedIPAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum blacklisted ip addresses to return, in order of last seen date descending.
        /// </summary>
        public static string MaxActiveBlacklistedIPAddressesTooltip {
            get {
                return ResourceManager.GetString("MaxActiveBlacklistedIPAddressesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max File Size.
        /// </summary>
        public static string MaxFileSize {
            get {
                return ResourceManager.GetString("MaxFileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The max size to let the file grow to before deleting it and starting over, in bytes.
        /// </summary>
        public static string MaxFileSizeTooltip {
            get {
                return ResourceManager.GetString("MaxFileSizeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Min Time Between Failed Logins.
        /// </summary>
        public static string MinimumTimeBetweenFailedLoginAttempts {
            get {
                return ResourceManager.GetString("MinimumTimeBetweenFailedLoginAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum time between failed login attempts for an ip address to increment the ban counter. Format is DD:HH:MM:SS. Will be clamped to 0 and 15 seconds..
        /// </summary>
        public static string MinimumTimeBetweenFailedLoginAttemptsTooltip {
            get {
                return ResourceManager.GetString("MinimumTimeBetweenFailedLoginAttemptsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Trust Level.
        /// </summary>
        public static string MinimumTrustLevel {
            get {
                return ResourceManager.GetString("MinimumTrustLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum trust level for recent banned ip sharing (0-10) where 0 is trust all submissions.
        /// </summary>
        public static string MinimumTrustLevelTooltip {
            get {
                return ResourceManager.GetString("MinimumTrustLevelTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monitor.
        /// </summary>
        public static string Monitor {
            get {
                return ResourceManager.GetString("Monitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Naughty List Count.
        /// </summary>
        public static string NaughtyListCount {
            get {
                return ResourceManager.GetString("NaughtyListCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Naughty list max count, set to 0 to disable.
        /// </summary>
        public static string NaughtyListCountTooltip {
            get {
                return ResourceManager.GetString("NaughtyListCountTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} naughty list items.
        /// </summary>
        public static string NaughtyListEntryCount {
            get {
                return ResourceManager.GetString("NaughtyListEntryCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notes.
        /// </summary>
        public static string Notes {
            get {
                return ResourceManager.GetString("Notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate Filter Window.
        /// </summary>
        public static string NotificationDuplicateFilterWindow {
            get {
                return ResourceManager.GetString("NotificationDuplicateFilterWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The window (DD:HH:MM:SS) to filter (and ignore) duplicate notifications.
        /// </summary>
        public static string NotificationDuplicateFilterWindowTooltip {
            get {
                return ResourceManager.GetString("NotificationDuplicateFilterWindowTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification Flags.
        /// </summary>
        public static string NotificationFlags {
            get {
                return ResourceManager.GetString("NotificationFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notifications.
        /// </summary>
        public static string Notifications {
            get {
                return ResourceManager.GetString("Notifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification Web Hook.
        /// </summary>
        public static string NotificationWebHook {
            get {
                return ResourceManager.GetString("NotificationWebHook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Url to POST a json request for notifications. The posted json contains Subject, Body and ToAddresses fields. Advanced: Use Uri=[uri] | Template=[template] | Format=[plain or markdown or slack, leave off for html]. Template will transform notification to your json. Example: { &quot;text&quot;:&quot;###SUBJECT###&quot;,&quot;blocks&quot;: [ { &quot;type&quot;: &quot;section&quot;, &quot;text&quot;: { &quot;type&quot;: &quot;mrkdwn&quot;, &quot;text&quot;: &quot;###SUBJECT###\n\n###BODY###&quot; } } ] } | format = slack | Uri = https://hooks.slack.com/services/KEY1/KEY2.
        /// </summary>
        public static string NotificationWebHookTooltip {
            get {
                return ResourceManager.GetString("NotificationWebHookTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notify Only.
        /// </summary>
        public static string NotifyOnly {
            get {
                return ResourceManager.GetString("NotifyOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether this is a notification of a successful login (true) or a failed login (false).
        /// </summary>
        public static string NotifyOnlyTooltip {
            get {
                return ResourceManager.GetString("NotifyOnlyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        public static string Options {
            get {
                return ResourceManager.GetString("Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operating System Name.
        /// </summary>
        public static string OSName {
            get {
                return ResourceManager.GetString("OSName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operating System Version.
        /// </summary>
        public static string OSVersion {
            get {
                return ResourceManager.GetString("OSVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other.
        /// </summary>
        public static string Other {
            get {
                return ResourceManager.GetString("Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other IP Addresses.
        /// </summary>
        public static string OtherIP {
            get {
                return ResourceManager.GetString("OtherIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lists.
        /// </summary>
        public static string OtherLists {
            get {
                return ResourceManager.GetString("OtherLists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPBan Pro block lists.
        /// </summary>
        public static string OtherListsTooltip {
            get {
                return ResourceManager.GetString("OtherListsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string Password {
            get {
                return ResourceManager.GetString("Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password again.
        /// </summary>
        public static string PasswordAgain {
            get {
                return ResourceManager.GetString("PasswordAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password to login with.
        /// </summary>
        public static string PasswordTooltip {
            get {
                return ResourceManager.GetString("PasswordTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paths and Masks.
        /// </summary>
        public static string PathAndMask {
            get {
                return ResourceManager.GetString("PathAndMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paths and masks to search, one per line. Glob syntax can be used for recursion, i.e. /logs/**/*.log.
        /// </summary>
        public static string PathAndMaskTooltip {
            get {
                return ResourceManager.GetString("PathAndMaskTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Platform Regex.
        /// </summary>
        public static string PlatformRegex {
            get {
                return ResourceManager.GetString("PlatformRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The regex to filter based on current platform, i.e. Windows or Linux..
        /// </summary>
        public static string PlatformRegexTooltip {
            get {
                return ResourceManager.GetString("PlatformRegexTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please Wait….
        /// </summary>
        public static string PleaseWait {
            get {
                return ResourceManager.GetString("PleaseWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugins.
        /// </summary>
        public static string Plugins {
            get {
                return ResourceManager.GetString("Plugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private API Key.
        /// </summary>
        public static string PrivateAPIKey {
            get {
                return ResourceManager.GetString("PrivateAPIKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your IPBan Pro Private API Key.
        /// </summary>
        public static string PrivateAPIKeyTooltip {
            get {
                return ResourceManager.GetString("PrivateAPIKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process Internal IP Addresses.
        /// </summary>
        public static string ProcessInternalIPAddresses {
            get {
                return ResourceManager.GetString("ProcessInternalIPAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to process internal ip addresses.
        /// </summary>
        public static string ProcessInternalIPAddressesTooltip {
            get {
                return ResourceManager.GetString("ProcessInternalIPAddressesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process to Run on Ban.
        /// </summary>
        public static string ProcessToRunOnBan {
            get {
                return ResourceManager.GetString("ProcessToRunOnBan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run an external process when a ban occurs. Separate the process and any arguments with a pipe (|). ###IPADDRESS### will be replaced with the actual IP which was banned. The pipe is required. Example: c:\system\files\on_ip_banned.exe|###IPADDRESS### -q.
        /// </summary>
        public static string ProcessToRunOnBanTooltip {
            get {
                return ResourceManager.GetString("ProcessToRunOnBanTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process to Run on Unban.
        /// </summary>
        public static string ProcessToRunOnUnban {
            get {
                return ResourceManager.GetString("ProcessToRunOnUnban", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run an external process when a ban is removed. Separate the process and any arguments with a pipe (|). ###IPADDRESS### will be replaced with the actual IP which was unbanned. The pipe is required. Example: c:\system\files\on_ip_unbanned.exe|###IPADDRESS### -q.
        /// </summary>
        public static string ProcessToRunOnUnbanTooltip {
            get {
                return ResourceManager.GetString("ProcessToRunOnUnbanTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol.
        /// </summary>
        public static string Protocol {
            get {
                return ResourceManager.GetString("Protocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public API Key.
        /// </summary>
        public static string PublicAPIKey {
            get {
                return ResourceManager.GetString("PublicAPIKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your IPBan Pro Public API Key.
        /// </summary>
        public static string PublicAPIKeyTooltip {
            get {
                return ResourceManager.GetString("PublicAPIKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recent Activity.
        /// </summary>
        public static string RecentActivity {
            get {
                return ResourceManager.GetString("RecentActivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recent Banned IP Addresses.
        /// </summary>
        public static string RecentBannedIPAddresses {
            get {
                return ResourceManager.GetString("RecentBannedIPAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recent Failed Logins.
        /// </summary>
        public static string RecentFailedLogins {
            get {
                return ResourceManager.GetString("RecentFailedLogins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recent List Count.
        /// </summary>
        public static string RecentListCount {
            get {
                return ResourceManager.GetString("RecentListCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recent list max count, set to 0 to disable.
        /// </summary>
        public static string RecentListCountTooltip {
            get {
                return ResourceManager.GetString("RecentListCountTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} recent list items.
        /// </summary>
        public static string RecentListEntryCount {
            get {
                return ResourceManager.GetString("RecentListEntryCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recent Successful Logins.
        /// </summary>
        public static string RecentSuccessLogins {
            get {
                return ResourceManager.GetString("RecentSuccessLogins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recursive.
        /// </summary>
        public static string Recursive {
            get {
                return ResourceManager.GetString("Recursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to scan recursively.
        /// </summary>
        public static string RecursiveTooltip {
            get {
                return ResourceManager.GetString("RecursiveTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Region.
        /// </summary>
        public static string Region {
            get {
                return ResourceManager.GetString("Region", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remaining Uses.
        /// </summary>
        public static string RemainingUses {
            get {
                return ResourceManager.GetString("RemainingUses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remember Me.
        /// </summary>
        public static string RememberMe {
            get {
                return ResourceManager.GetString("RememberMe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Host.
        /// </summary>
        public static string RemoteHost {
            get {
                return ResourceManager.GetString("RemoteHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote IP Address.
        /// </summary>
        public static string RemoteIP {
            get {
                return ResourceManager.GetString("RemoteIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Port.
        /// </summary>
        public static string RemotePort {
            get {
                return ResourceManager.GetString("RemotePort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove all license keys and reset usage..
        /// </summary>
        public static string RemoveAllLicenseKeys {
            get {
                return ResourceManager.GetString("RemoveAllLicenseKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request a plugin.
        /// </summary>
        public static string RequestAPlugin {
            get {
                return ResourceManager.GetString("RequestAPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset Failed Login Count on Unban.
        /// </summary>
        public static string ResetFailedLoginCountForUnbannedIPAddresses {
            get {
                return ResourceManager.GetString("ResetFailedLoginCountForUnbannedIPAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolve IP Address.
        /// </summary>
        public static string ResolveIPAddress {
            get {
                return ResourceManager.GetString("ResolveIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resources.
        /// </summary>
        public static string Resources {
            get {
                return ResourceManager.GetString("Resources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role.
        /// </summary>
        public static string Role {
            get {
                return ResourceManager.GetString("Role", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rule.
        /// </summary>
        public static string Rule {
            get {
                return ResourceManager.GetString("Rule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select All.
        /// </summary>
        public static string SelectAll {
            get {
                return ResourceManager.GetString("SelectAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select None.
        /// </summary>
        public static string SelectNone {
            get {
                return ResourceManager.GetString("SelectNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Firewall Monitoring.
        /// </summary>
        public static string SetFirewallMonitoring {
            get {
                return ResourceManager.GetString("SetFirewallMonitoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (c) 2018-{0} Digital Ruby, LLC.
        /// </summary>
        public static string SiteCopyright {
            get {
                return ResourceManager.GetString("SiteCopyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://ipban.com.
        /// </summary>
        public static string SiteLink {
            get {
                return ResourceManager.GetString("SiteLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPBan Pro Admin.
        /// </summary>
        public static string SiteName {
            get {
                return ResourceManager.GetString("SiteName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email Body Template.
        /// </summary>
        public static string SmtpBodyTemplate {
            get {
                return ResourceManager.GetString("SmtpBodyTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Body template for sent mail. {0} = machine name, {1} = user name, {2} = local ip address, {3} = remote ip address, {4} = remote host name, {5} = city, {6} = region, {7} = country, {8} = event type, {9} = source..
        /// </summary>
        public static string SmtpBodyTemplateTooltip {
            get {
                return ResourceManager.GetString("SmtpBodyTemplateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Email As.
        /// </summary>
        public static string SmtpFrom {
            get {
                return ResourceManager.GetString("SmtpFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Smtp user to send mail as (i.e. bob@hotmail.com).
        /// </summary>
        public static string SmtpFromTooltip {
            get {
                return ResourceManager.GetString("SmtpFromTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Smtp Port.
        /// </summary>
        public static string SmtpPort {
            get {
                return ResourceManager.GetString("SmtpPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The smtp server port, i.e. 20.
        /// </summary>
        public static string SmtpPortTooltip {
            get {
                return ResourceManager.GetString("SmtpPortTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Smtp Server.
        /// </summary>
        public static string SmtpServer {
            get {
                return ResourceManager.GetString("SmtpServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The smtp server, i.e. mail.yourdomain.com.
        /// </summary>
        public static string SmtpServerTooltip {
            get {
                return ResourceManager.GetString("SmtpServerTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email Subject Template.
        /// </summary>
        public static string SmtpSubjectTemplate {
            get {
                return ResourceManager.GetString("SmtpSubjectTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subject template for sent mail. {0} = machine name, {1} = user name, {2} = local ip address, {3} = remote ip address, {4} = remote host name, {5} = city, {6} = region, {7} = country, {8} = event type, {9} = source..
        /// </summary>
        public static string SmtpSubjectTemplateTooltip {
            get {
                return ResourceManager.GetString("SmtpSubjectTemplateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Email To.
        /// </summary>
        public static string SmtpTo {
            get {
                return ResourceManager.GetString("SmtpTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comma separated list of users to send mail to.
        /// </summary>
        public static string SmtpToTooltip {
            get {
                return ResourceManager.GetString("SmtpToTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whois Body Template.
        /// </summary>
        public static string SmtpWhoisBodyTemplate {
            get {
                return ResourceManager.GetString("SmtpWhoisBodyTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Body template for emailing abuse email addresses. {0} = banned ip address, {1} = banned host name, {2} = log of failed attempts..
        /// </summary>
        public static string SmtpWhoisBodyTemplateTooltip {
            get {
                return ResourceManager.GetString("SmtpWhoisBodyTemplateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whois Subject Template.
        /// </summary>
        public static string SmtpWhoisSubjectTemplate {
            get {
                return ResourceManager.GetString("SmtpWhoisSubjectTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subject template for emailing abuse email addresses. {0} = banned ip address, {1} = banned host name, {2} = external ip address of machine that banned the ip address, {3} = machine name, {4} = machine ip address..
        /// </summary>
        public static string SmtpWhoisSubjectTemplateTooltip {
            get {
                return ResourceManager.GetString("SmtpWhoisSubjectTemplateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source.
        /// </summary>
        public static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event source, i.e. RDP, SSH, SMTP, etc..
        /// </summary>
        public static string SourceTooltip {
            get {
                return ResourceManager.GetString("SourceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Self signed certificate.
        /// </summary>
        public static string SslSelfSignedCertificate {
            get {
                return ResourceManager.GetString("SslSelfSignedCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn on if your certificate is self signed.
        /// </summary>
        public static string SslSelfSignedCertificateTooltip {
            get {
                return ResourceManager.GetString("SslSelfSignedCertificateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status.
        /// </summary>
        public static string Status {
            get {
                return ResourceManager.GetString("Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submit.
        /// </summary>
        public static string Submit {
            get {
                return ResourceManager.GetString("Submit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        public static string Success {
            get {
                return ResourceManager.GetString("Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successful Log Level.
        /// </summary>
        public static string SuccessfulLoginLogLevel {
            get {
                return ResourceManager.GetString("SuccessfulLoginLogLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successful Login Regex.
        /// </summary>
        public static string SuccessfulLoginRegex {
            get {
                return ResourceManager.GetString("SuccessfulLoginRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successful Login Regex Timestamp Format.
        /// </summary>
        public static string SuccessfulLoginRegexTimestampFormat {
            get {
                return ResourceManager.GetString("SuccessfulLoginRegexTimestampFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format for timestamp if successful login regex has a timestamp group.
        /// </summary>
        public static string SuccessfulLoginRegexTimestampFormatTooltip {
            get {
                return ResourceManager.GetString("SuccessfulLoginRegexTimestampFormatTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regex to parse succesful logins out of log files. Please provide ipaddress and username groups..
        /// </summary>
        public static string SuccessfulLoginRegexTooltip {
            get {
                return ResourceManager.GetString("SuccessfulLoginRegexTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Summary.
        /// </summary>
        public static string Summary {
            get {
                return ResourceManager.GetString("Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test.
        /// </summary>
        public static string Test {
            get {
                return ResourceManager.GetString("Test", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp.
        /// </summary>
        public static string Timestamp {
            get {
                return ResourceManager.GetString("Timestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle.
        /// </summary>
        public static string Toggle {
            get {
                return ResourceManager.GetString("Toggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tools.
        /// </summary>
        public static string Tools {
            get {
                return ResourceManager.GetString("Tools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unban.
        /// </summary>
        public static string Unban {
            get {
                return ResourceManager.GetString("Unban", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unban IPAddresses.
        /// </summary>
        public static string UnbanIPAddresses {
            get {
                return ResourceManager.GetString("UnbanIPAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error has ocurred. Please email support@ipban.com for help..
        /// </summary>
        public static string UnexpectedError {
            get {
                return ResourceManager.GetString("UnexpectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        public static string Update {
            get {
                return ResourceManager.GetString("Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Available.
        /// </summary>
        public static string UpdateAvailable {
            get {
                return ResourceManager.GetString("UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Clients.
        /// </summary>
        public static string UpdateClients {
            get {
                return ResourceManager.GetString("UpdateClients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Url.
        /// </summary>
        public static string Url {
            get {
                return ResourceManager.GetString("Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used.
        /// </summary>
        public static string Used {
            get {
                return ResourceManager.GetString("Used", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Default Banned IP Address Handler.
        /// </summary>
        public static string UseDefaultBannedIPAddressHandler {
            get {
                return ResourceManager.GetString("UseDefaultBannedIPAddressHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to use the default banned ip address handler. Turn off to disable default handling such as sharing anonymously the banned ip address to the global banned ip address database..
        /// </summary>
        public static string UseDefaultBannedIPAddressHandlerTooltip {
            get {
                return ResourceManager.GetString("UseDefaultBannedIPAddressHandlerTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email or user name.
        /// </summary>
        public static string UserName {
            get {
                return ResourceManager.GetString("UserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name or password is empty.
        /// </summary>
        public static string UsernameOrPasswordIsBlank {
            get {
                return ResourceManager.GetString("UsernameOrPasswordIsBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user name (i.e. bob@hotmail.com).
        /// </summary>
        public static string UserNameTooltip {
            get {
                return ResourceManager.GetString("UserNameTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name truncation chars.
        /// </summary>
        public static string UserNameTruncationChars {
            get {
                return ResourceManager.GetString("UserNameTruncationChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Characters to truncate user name at or empty for none. @ sign can be used to strip domain name off email or active directory login for example.
        /// </summary>
        public static string UserNameTruncationCharsTooltip {
            get {
                return ResourceManager.GetString("UserNameTruncationCharsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Name Whitelist.
        /// </summary>
        public static string UserNameWhitelist {
            get {
                return ResourceManager.GetString("UserNameWhitelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Name Edit Distance.
        /// </summary>
        public static string UserNameWhitelistMinimumEditDistance {
            get {
                return ResourceManager.GetString("UserNameWhitelistMinimumEditDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If user name whitelist is not empty and if the edit distance (levenshtein distance) of a failed user name is greater than this distance away, the user name is immediately banned. Set to 0 to ban all failed user names if UserNameWhitelist has entries. Case is ignored. Empty user names are always allowed..
        /// </summary>
        public static string UserNameWhitelistMinimumEditDistanceTooltip {
            get {
                return ResourceManager.GetString("UserNameWhitelistMinimumEditDistanceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Name Whitelist Regex.
        /// </summary>
        public static string UserNameWhitelistRegex {
            get {
                return ResourceManager.GetString("UserNameWhitelistRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, any user name that fails this regex will result in an immediate ban of the ip address..
        /// </summary>
        public static string UserNameWhitelistRegexTooltip {
            get {
                return ResourceManager.GetString("UserNameWhitelistRegexTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comma separated list of user names that are allowed. UserNameWhitelistMinimumEditDistance is checked for user names not in the list to determine whether a failed user name should be banned. Case is ignored. Empty user names are always allowed. *** IMPORTANT*** This can represent an attack vector by a hacker. If they know you are using IPBan and they don&apos;t get locked out right away, they might know they are somewhat close to the right user name. Make sure your passwords are complex enough and this shouldn&apos;t  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string UserNameWhitelistTooltip {
            get {
                return ResourceManager.GetString("UserNameWhitelistTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome, {0}.
        /// </summary>
        public static string Welcome {
            get {
                return ResourceManager.GetString("Welcome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whitelister.
        /// </summary>
        public static string Whitelister {
            get {
                return ResourceManager.GetString("Whitelister", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whitelist Urls.
        /// </summary>
        public static string WhitelistUrls {
            get {
                return ResourceManager.GetString("WhitelistUrls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml Configuration.
        /// </summary>
        public static string XmlConfiguration {
            get {
                return ResourceManager.GetString("XmlConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure configuration using raw Xml.
        /// </summary>
        public static string XmlConfigurationTooltip {
            get {
                return ResourceManager.GetString("XmlConfigurationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XPath.
        /// </summary>
        public static string XPath {
            get {
                return ResourceManager.GetString("XPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XPath Regex.
        /// </summary>
        public static string XPathRegex {
            get {
                return ResourceManager.GetString("XPathRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regex to find in the xpath, please provide ipaddress and username groups..
        /// </summary>
        public static string XPathRegexTooltip {
            get {
                return ResourceManager.GetString("XPathRegexTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XPath to find, i.e. //Node/SubNode.
        /// </summary>
        public static string XPathTooltip {
            get {
                return ResourceManager.GetString("XPathTooltip", resourceCulture);
            }
        }
    }
}
